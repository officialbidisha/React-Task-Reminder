{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","Header","title","onAdd","showAdd","defaultProps","prototypes","PropTypes","string","Footer","href","About","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","deleteTask","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","useEffect","a","fetchTasks","taskFromServer","getTasks","fetch","res","json","data","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","redirect","then","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d0835eb.chunk.js","sourcesContent":["\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      className=\"btn\"\r\n      style={{ backgroundColor: color }}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\nconst Header = ({ title , onAdd, showAdd}) => {\r\n  /**Destructuring - (props) to ({title}) */\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      {/* <h1 style={{color:'red', backgroundColor:'black'}}>{title}</h1> */}\r\n      {/* <h1 style={headingStyle}>{title}</h1> */}\r\n      <h1>{title}</h1>\r\n      {/* <button className='btn'>Add</button> */}\r\n      <Button color={showAdd? 'red': \"green\"} text={showAdd?  'Close': 'Add'} onClick={onAdd}  />\r\n    </header>\r\n  );\r\n};\r\n\r\n/**\r\n * This is useful for writing default props\r\n */\r\nHeader.defaultProps = {\r\n  title: \"Default Tracker\",\r\n};\r\n\r\n/**\r\n * Prop types - impt\r\n */\r\nHeader.prototypes = {\r\n  title: PropTypes.string,\r\n  // let's say if you require it:\r\n  // PropTypes.string.required.\r\n};\r\n\r\n// const headingStyle = {\r\n//     color:'red',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <a href=\"/about\">About</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from \"react-router-dom\";\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to=\"/\">Go Back</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport const Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <i\r\n          className=\"pi pi-times\"\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            onDelete(task.id);\r\n          }}\r\n        ></i>\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {Task} from './Task';\r\nconst Tasks = ({tasks, deleteTask, onToggle}) => {\r\n  return(\r\n      <>\r\n        {tasks.map((task, index)=>(\r\n            <Task key={index} task={task} onDelete={deleteTask} onToggle={onToggle}/>\r\n        ))}\r\n      </>\r\n  )\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\"); // setText is used to update state, default empty string\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false); // default for reminder is false\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport About from \"./components/About\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  /**\r\n   * Remember this state is immutable, hence setTasks is used not tasks.push()\r\n   */\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  //Step 1\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  /**\r\n   * On loading page whatever needs to happen, needs to go under useEffect.\r\n   */\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const taskFromServer = await fetchTasks();\r\n      setTasks(taskFromServer);\r\n    };\r\n    getTasks();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetch list of tasks\r\n   * @returns JSON\r\n   */\r\n  const fetchTasks = async () => {\r\n    const res = await fetch(\"https://my-json-server.typicode.com/officialbidisha/React-Task-Reminder/tasks\");\r\n    const data = await res.json();\r\n    console.log(data);\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * Fetch a single task based on id\r\n   */\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`https://my-json-server.typicode.com/officialbidisha/React-Task-Reminder/tasks?id=${id}`);\r\n    const data = res.json();\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * Adds tasks to the list of task\r\n   * @param {*} task\r\n   */\r\n\r\n  const addTask = async (task) => {\r\n    console.log(task);\r\n    const res = await fetch(\"https://my-json-server.typicode.com/officialbidisha/React-Task-Reminder/tasks\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    });\r\n\r\n    const data = await res.json();\r\n    /**\r\n     *\r\n     */\r\n    setTasks([...tasks, data]);\r\n  };\r\n\r\n  /**\r\n   * Deletes a task having specific id\r\n   * @param {*} id\r\n   */\r\n  const deleteTask = async (id) => {\r\n    await fetch(`https://my-json-server.typicode.com/officialbidisha/React-Task-Reminder/tasks/{id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'manual',\r\n    }).then((data)=>{\r\n      console.log(data);\r\n    })\r\n    \r\n\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  /**\r\n   * Toggle reminder of any task\r\n   * @param {*} id\r\n   */\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id);\r\n    debugger;\r\n    const updatedTask = {\r\n      ...taskToToggle[0],\r\n      reminder: !taskToToggle[0].reminder,\r\n    };\r\n    const res = await fetch(`https://my-json-server.typicode.com/officialbidisha/React-Task-Reminder/tasks/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify(updatedTask),\r\n    });\r\n    const data = await res.json();\r\n    /**\r\n     * This will show the update immediately. Other wise to see the update, we would need to refresh once\r\n     */\r\n    setTasks(\r\n      tasks.map((task) =>\r\n          task.id === id ? { ...task, reminder: data.reminder } : task\r\n        \r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Final block that returns DIV\r\n   */\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Header\r\n          onAdd={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        <Route\r\n          path='/'\r\n          exact\r\n          render={(props) => (\r\n            <>\r\n              {showAddTask ? <AddTask onAdd={addTask} />: ''}\r\n              {tasks.length > 0 ? (\r\n                <Tasks\r\n                  tasks={tasks}\r\n                  deleteTask={deleteTask}\r\n                  onToggle={toggleReminder}\r\n                />\r\n              ) : (\r\n                'No Tasks To Show'\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n        <Route path='/about' component={About} />\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}